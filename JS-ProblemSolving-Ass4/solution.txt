function calculateTax(income, expenses) {
  let restIncome = 0;
  let incomeTax = 0;

  if (income >= 0 && expenses >= 0 && income >= expenses) {
    restIncome = income - expenses;
    incomeTax = (restIncome * 20) / 100;
    return incomeTax;
  } else {
    return "Invalid Input";
  }
}


function sendNotification(email) {
  let user_name = "";
  let domain_name = "";
  let notification_message = "";

  if (typeof email === "string" && email.charAt(email.indexOf("@")) === "@") {
    user_name = email.split("@")[0];
    domain_name = email.split("@")[1];
    notification_message = `${user_name} sent you an email from ${domain_name}`;
    return notification_message;
  } else {
    return "Invalid Email";
  }
}


function checkDigitsInName(name) {
  const hasNumber = /\d/;

  if (typeof name === "string") {
    if (hasNumber.test(name)) {
      return true;
    } else {
      return false;
    }
  } else {
    return "Invalid Input";
  }
}


function calculateFinalScore(obj) {
  let total_score = 0;

  if (typeof obj === "object" && !Array.isArray(obj) && obj !== null) {
    if (
      typeof obj.name === "string" &&
      typeof obj.testScore === "number" &&
      typeof obj.schoolGrade === "number" &&
      typeof obj.isFFamily === "boolean"
    ) {
      if (obj.testScore <= 50 && obj.schoolGrade <= 30) {
        total_score =
          obj.isFFamily === true
            ? obj.testScore + obj.schoolGrade + 20
            : obj.testScore + obj.schoolGrade + 0;
        if (total_score >= 80) {
          return true;
        } else {
          return false;
        }
      } else {
        return "Invalid Input";
      }
    } else {
      return "Invalid Input";
    }
  } else {
    return "Invalid Input";
  }
}


function waitingTime(waitingTimes , serialNumber) {
  let sumOf_times = 0;
  let averageOf_times = 0;
  let waited_persons = 0;
  let waiting_times = 0;

  if (Array.isArray(waitingTimes) && typeof serialNumber === "number" && serialNumber > waitingTimes.length) {
    for (let i = 0; i < waitingTimes.length; i++) {
      sumOf_times += waitingTimes[i];
    }
    averageOf_times = sumOf_times / waitingTimes.length;
    waited_persons = serialNumber - 1 - waitingTimes.length;
    waiting_times = Math.round(averageOf_times) * waited_persons;
    return waiting_times;
  } else {
    return "Invalid Input";
  }
}

